<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:tvdc"
    xmlns:acb="clr-namespace:AttachedCommandBehavior"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
    x:Class="tvdc.MainWindow"
    Title="Twitch Viewer Display" Height="434" Width="850"
    Icon="Resources/Twitch-tv-logo.png"
    Background="{StaticResource WindowBackgroundBrush}"
    MinWidth="650" MinHeight="300" Closed="Window_Closed" WindowStartupLocation="CenterScreen">

    <Window.Resources>

        <Storyboard x:Key="CloseHintStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="Width" To="0" AccelerationRatio="0.3"
                             Duration="0:0:0.7" BeginTime="0:0:10"/>
            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" AccelerationRatio="0.3"
                             Duration="0:0:0.7" BeginTime="0:0:10" />
        </Storyboard>

        <LinearGradientBrush x:Key="errBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Offset="0" Color="Red" />
            <GradientStop Offset="1" Color="#FFD20000" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="joinBrush" EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0.6">
            <GradientStop Offset="0" Color="#B400B700" />
            <GradientStop Offset="1" Color="#B4007C00" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="partBrush" EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0.6">
            <GradientStop Offset="0" Color="#B4B70000" />
            <GradientStop Offset="1" Color="#B47C0000" />
        </LinearGradientBrush>

        <Style x:Key="UserContextMenuNameHeaderStyle" TargetType="MenuItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border Name="Border">
                            <Grid>
                                <ContentPresenter Margin="6,3,6,3" ContentSource="Header"
                                                              RecognizesAccessKey="True" HorizontalAlignment="Center"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ContextMenu x:Key="UserContextMenu">
            <MenuItem Header="{Binding Username}" IsEnabled="False" FontWeight="Bold"
                      Style="{StaticResource UserContextMenuNameHeaderStyle}"/>
            <MenuItem Header="Mod" Command="{Binding CmdMod, Source={x:Static local:MainWindowVM.Instance}}"
                      CommandParameter="{Binding Username}" Foreground="Black" />
            <MenuItem Header="Unmod" Command="{Binding CmdUnmod, Source={x:Static local:MainWindowVM.Instance}}"
                      CommandParameter="{Binding Username}" Foreground="Black"/>
            <MenuItem Header="Timeout" Command="{Binding CmdTimeout, Source={x:Static local:MainWindowVM.Instance}}"
                      CommandParameter="{Binding Username}" Foreground="Black"/>
        </ContextMenu>

        <ContextMenu x:Key="UserContextMenuViewerList">
            <MenuItem Header="{Binding Name}" IsEnabled="False" OverridesDefaultStyle="True" FontWeight="Bold"
                      Style="{StaticResource UserContextMenuNameHeaderStyle}"/>
            <MenuItem Header="Mod" Command="{Binding CmdMod, Source={x:Static local:MainWindowVM.Instance}}"
                      CommandParameter="{Binding Name}" Foreground="Black" />
            <MenuItem Header="Unmod" Command="{Binding CmdUnmod, Source={x:Static local:MainWindowVM.Instance}}"
                      CommandParameter="{Binding Name}" Foreground="Black"/>
            <MenuItem Header="Timeout" Command="{Binding CmdTimeout, Source={x:Static local:MainWindowVM.Instance}}"
                      CommandParameter="{Binding Name}" Foreground="Black"/>
        </ContextMenu>

        <Style TargetType="Image" x:Key="BadgeImageStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding}" Value="{x:Static local:Badges+BadgeTypes.ADMIN}">
                    <Setter Property="Source" Value="{x:Static local:Badges.Admin}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="{x:Static local:Badges+BadgeTypes.BROADCASTER}">
                    <Setter Property="Source" Value="{x:Static local:Badges.Broadcaster}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="{x:Static local:Badges+BadgeTypes.GLOBAL_MOD}">
                    <Setter Property="Source" Value="{x:Static local:Badges.Global_mod}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="{x:Static local:Badges+BadgeTypes.MODERATOR}">
                    <Setter Property="Source" Value="{x:Static local:Badges.Moderator}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="{x:Static local:Badges+BadgeTypes.STAFF}">
                    <Setter Property="Source" Value="{x:Static local:Badges.Staff}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="{x:Static local:Badges+BadgeTypes.TURBO}">
                    <Setter Property="Source" Value="{x:Static local:Badges.Turbo}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="{x:Static local:Badges+BadgeTypes.PREMIUM}">
                    <Setter Property="Source" Value="{x:Static local:Badges.Premium}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="{x:Static local:Badges+BadgeTypes.SUBSCRIBER}">
                    <Setter Property="Source" Value="{x:Static local:Badges.Subscriber}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Control Templates for the chat box -->
        <ControlTemplate x:Key="EmoticonParagraph" TargetType="ListViewItem">
            <Image Source="{Binding ImageSource}" Width="{Binding ImageWidth}" Height="{Binding ImageHeight}" VerticalAlignment="Center"
                   IsHitTestVisible="False"/>
        </ControlTemplate>

        <ControlTemplate x:Key="TextParagraph" TargetType="ListViewItem">
            <TextBlock Text="{Binding Text}" Background="Transparent" VerticalAlignment="Center" TextWrapping="Wrap"
                       MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="FontFamily" Value="Segoe UI" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsAction}" Value="True">
                                <Setter Property="Foreground"
                                        Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsURL}" Value="True">
                                <Setter Property="TextDecorations" Value="Underline" />
                                <Setter Property="Foreground" Value="LightBlue" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="acb:CommandBehavior.Event" Value="MouseLeftButtonDown" />
                                <Setter Property="acb:CommandBehavior.Command" Value="{Binding cmdUrlClicked}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </ControlTemplate>

        <ControlTemplate x:Key="Chat" TargetType='{x:Type ListViewItem}'>
            <StackPanel Background="Transparent" Orientation="Horizontal" ScrollViewer.VerticalScrollBarVisibility="Disabled" >
                <GridViewRowPresenter Content="{TemplateBinding Content}" Columns="{TemplateBinding GridView.ColumnCollection}"/>

                <!--Badges-->
                <ListView ItemsSource="{Binding Badges}" Background="Transparent" BorderBrush="{x:Null}" Margin="0"
                          ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>

                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <Image Width="18" Height="18" Margin="5,0,0,0" SnapsToDevicePixels="True" VerticalAlignment="Center"
                                               Style="{StaticResource BadgeImageStyle}" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>

                </ListView>

                <TextBlock Background="Transparent" Text="{Binding Username}" Foreground="{Binding Color}" FontWeight="Bold"
                           Margin="5,5,0,5" VerticalAlignment="Center" ContextMenu="{StaticResource UserContextMenu}"
                           Cursor="Hand" Style="{x:Null}" />

                <ListView Foreground="{Binding Color}" ItemsSource="{Binding Paragraphs}" Margin="5,0,0,0" Focusable="False" BorderThickness="0"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" Background="Transparent">

                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                            <!--<WrapPanel Width="{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"
                                       ItemWidth="{Binding (ListView.View).ItemWidth, RelativeSource={RelativeSource AncestorType=ListView}}"
                                       MinWidth="{Binding ItemWidth, RelativeSource={RelativeSource Self}}"
                                       ItemHeight="{Binding (ListView.View).ItemHeight, RelativeSource={RelativeSource AncestorType=ListView}}" />-->
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>

                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}"  >
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsImage}" Value="True">
                                    <Setter Property="Template" Value="{StaticResource EmoticonParagraph}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsImage}" Value="False">
                                    <Setter Property="Template" Value="{StaticResource TextParagraph}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>

                </ListView>
            </StackPanel>
        </ControlTemplate>

        <ControlTemplate x:Key="err" TargetType='{x:Type ListViewItem}'>
            <StackPanel Background="{StaticResource errBrush}" Orientation="Horizontal">
                <GridViewRowPresenter Content="{TemplateBinding Content}" Columns="{TemplateBinding GridView.ColumnCollection}"/>
                <TextBlock Background="Transparent" Text="[E]" FontWeight="Bold" Margin="5,0,0,5" Style="{x:Null}"/>
                <TextBlock Background="Transparent" Text="{Binding Text}" Margin="5,0,0,5" Style="{x:Null}"/>
            </StackPanel>
        </ControlTemplate>

        <ControlTemplate x:Key="Join" TargetType='{x:Type ListViewItem}'>
            <StackPanel Background="{StaticResource joinBrush}" Orientation="Horizontal">
                <GridViewRowPresenter Content="{TemplateBinding Content}" Columns="{TemplateBinding GridView.ColumnCollection}"/>
                <TextBlock Background="Transparent" Text="{Binding Username}" FontWeight="Bold" Margin="5,0,0,5" Style="{x:Null}"/>
                <TextBlock Background="Transparent" Text="{Binding Text}" Margin="5,0,0,5" Style="{x:Null}"/>
            </StackPanel>
        </ControlTemplate>

        <ControlTemplate x:Key="Part" TargetType='{x:Type ListViewItem}'>
            <StackPanel Background="{StaticResource partBrush}" Orientation="Horizontal">
                <GridViewRowPresenter Content="{TemplateBinding Content}" Columns="{TemplateBinding GridView.ColumnCollection}"/>
                <TextBlock Background="Transparent" Text="{Binding Username}" FontWeight="Bold" Margin="5,0,0,5" Style="{x:Null}"/>
                <TextBlock Background="Transparent" Text="{Binding Text}" Margin="5,0,0,5" Style="{x:Null}" />
            </StackPanel>
        </ControlTemplate>

        <ControlTemplate x:Key="IRC" TargetType='{x:Type ListViewItem}'>
            <StackPanel Background="Transparent" Orientation="Horizontal">
                <GridViewRowPresenter Content="{TemplateBinding Content}" Columns="{TemplateBinding GridView.ColumnCollection}"/>
                <TextBlock Background="Transparent" Text="[IRC]" FontWeight="Bold" Margin="5,0,0,5" Style="{x:Null}"/>
                <TextBlock Background="Transparent" Text="{Binding Text}" Margin="5,0,0,5" Style="{x:Null}" />
            </StackPanel>
        </ControlTemplate>

        <ControlTemplate x:Key="IRCHostingMessage" TargetType='{x:Type ListViewItem}'>
            <StackPanel Background="Transparent" Orientation="Horizontal">
                <GridViewRowPresenter Content="{TemplateBinding Content}" Columns="{TemplateBinding GridView.ColumnCollection}"/>
                <TextBlock Background="Transparent" Text="[IRC]" FontWeight="Bold" Margin="5,0,0,5" Style="{x:Null}"/>
                <TextBlock Background="Transparent" Text="Now hosting" Margin="5,0,0,5" Style="{x:Null}"/>
                <TextBlock Background="Transparent" Text="{Binding HostingChannelName}" Margin="5,0,0,5" FontWeight="Bold" Cursor="Hand"
                           acb:CommandBehavior.Command="{Binding CmdSwitchChannel, Source={x:Static local:MainWindowVM.Instance}}"
                           acb:CommandBehavior.CommandParameter="{Binding HostingChannelName}"
                           acb:CommandBehavior.Event="MouseLeftButtonDown" Style="{x:Null}"/>
            </StackPanel>
        </ControlTemplate>


        <!-- Control Templates for the viewers listbox -->
        <ControlTemplate x:Key="Viewer" TargetType="{x:Type ListViewItem}">
            <StackPanel Orientation="Horizontal" Background="{x:Null}">
                <!--Badges-->
                <ListView ItemsSource="{Binding Badges}" Background="Transparent" BorderBrush="{x:Null}" Margin="0"
                          ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>

                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <Image Width="18" Height="18" Margin="5,0,0,0" SnapsToDevicePixels="True" VerticalAlignment="Center"
                                            Style="{StaticResource BadgeImageStyle}" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>

                </ListView>

                <TextBlock Background="Transparent" Text="{Binding DisplayName}" Margin="5,2,0,2"
                           Cursor="Hand" ContextMenu="{StaticResource UserContextMenuViewerList}" Style="{x:Null}"/>
            </StackPanel>
        </ControlTemplate>

    </Window.Resources>

    <Grid>

        <local:Graph x:Name="ViewerGraph" Height="100" Margin="12,12,268,0" VerticalAlignment="Top" Background="Transparent" />

        <ListView x:Name="viewersLB" Margin="12,152,0,15" Background="Transparent" HorizontalAlignment="Left" Width="156"
                  Foreground="White" ItemsSource="{Binding viewerList, Mode=OneWay}" Focusable="False">

            <ListView.Style>
                <Style TargetType="{x:Type ListView}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListView}">
                                <Border x:Name="Border" BorderThickness="1" Background="Transparent" BorderBrush="White">
                                    <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.Style>

            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Template" Value="{StaticResource Viewer}" />
                    <Setter Property="Height" Value="20" />
                </Style>
            </ListView.ItemContainerStyle>

        </ListView>

        <ListView x:Name="eventList" Margin="174,152,12,44" Background="Transparent" Foreground="White"
                  ItemsSource="{Binding chatEntryList}" Focusable="False" FontSize="{Binding ChatSize}"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled">

            <ListView.Style>
                <Style TargetType="{x:Type ListView}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListView}">
                                <Border x:Name="Border" BorderThickness="1" Background="Transparent" BorderBrush="White">
                                    <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.Style>

            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}"  >
                    <Setter Property="Template" Value="{StaticResource Chat}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding EventType}" Value="{x:Static local:ChatEntry+Type.CHAT}">
                            <Setter Property="Template" Value="{StaticResource Chat}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding EventType}" Value="{x:Static local:ChatEntry+Type.PART}">
                            <Setter Property="Template" Value="{StaticResource Part}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding EventType}" Value="{x:Static local:ChatEntry+Type.JOIN}">
                            <Setter Property="Template" Value="{StaticResource Join}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding EventType}" Value="{x:Static local:ChatEntry+Type.IRC}">
                            <Setter Property="Template" Value="{StaticResource IRC}"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding EventType}" Value="{x:Static local:ChatEntry+Type.IRC}" />
                                <Condition Binding="{Binding IsHostingMessage}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Template" Value="{StaticResource IRCHostingMessage}" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding EventType}" Value="{x:Static local:ChatEntry+Type.ERROR}">
                            <Setter Property="Template" Value="{StaticResource err}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>

        </ListView>

        <TextBox x:Name="tbChat" Margin="174,0,12,15" Background="Transparent" AcceptsReturn="True" CaretBrush="White"
            BorderBrush="White" Foreground="White" Height="23" VerticalAlignment="Bottom" TextChanged="tbChat_TextChanged" />

        <TextBlock Text="Viewers" Height="28" HorizontalAlignment="Left" Margin="12,118,0,0" x:Name="Label1" VerticalAlignment="Top" Width="156" FontFamily="Segoe UI Light" FontSize="20" Foreground="White" UseLayoutRounding="False" Padding="1" />
        <TextBlock Text="Chat" FontFamily="Segoe UI Light" FontSize="20" Foreground="White" Height="28" Margin="174,118,0,0" x:Name="lblChat" Padding="1" UseLayoutRounding="False" VerticalAlignment="Top" HorizontalAlignment="Left" Width="48" />
        <TextBlock Text="Viewers" FontFamily="Segoe UI Light" FontSize="14" Foreground="White" Height="20" HorizontalAlignment="Right" Margin="0,12,162,0" x:Name="Label3" Padding="1" UseLayoutRounding="False" VerticalAlignment="Top" Width="100" />
        <Image Height="20" HorizontalAlignment="Right" Margin="0,38,242,0" x:Name="imgViewers" Stretch="Fill" VerticalAlignment="Top" Width="20" Source="Resources/viewers.png" />
        <TextBlock Text="{Binding ViewerCount}" FontFamily="Segoe UI" FontSize="20" Foreground="White" Height="24.5" HorizontalAlignment="Right" Margin="0,33.5,145,0" x:Name="vc" Padding="0" UseLayoutRounding="False" VerticalAlignment="Top" Width="90.5" FontWeight="Normal" />
        <TextBlock Text="Followers" FontFamily="Segoe UI Light" FontSize="14" Foreground="White" Height="20" HorizontalAlignment="Right" Margin="0,64,162,0" x:Name="Label5" Padding="1" UseLayoutRounding="False" VerticalAlignment="Top" Width="100" />
        <Image Height="22" HorizontalAlignment="Right" Margin="0,90,242,0" x:Name="imgFollowers" Stretch="Fill" VerticalAlignment="Top" Width="20" Source="Resources/followers.png" />
        <TextBlock Text="{Binding FollowerCount}" FontFamily="Segoe UI" FontSize="20" Foreground="White" Height="26" HorizontalAlignment="Right" Margin="0,86,145,0" x:Name="fc" Padding="0" UseLayoutRounding="False" VerticalAlignment="Top" Width="90.5" />
        <Image Height="28" HorizontalAlignment="Left" Margin="290,120,0,0" x:Name="Image1" Stretch="Fill" VerticalAlignment="Top" Width="28" Source="Resources/settings18.png" Focusable="False" RenderTransformOrigin="0.5,0.5" Cursor="Hand" MouseLeftButtonDown="Image1_MouseLeftButtonDown">
            <Image.RenderTransform>
                <RotateTransform x:Name="settingsRotation" Angle="0" />
            </Image.RenderTransform>
            <Image.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="settingsRotation" Storyboard.TargetProperty="Angle"
								From="0"
								To="45" RepeatBehavior="Forever" SpeedRatio="4" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="settingsRotation" Storyboard.TargetProperty="Angle"
								To="0" SpeedRatio="4" DecelerationRatio="0.9" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Image.Triggers>
        </Image>

        <Button x:Name="btnChatBigger" Content="+" Margin="234,124,0,0" Width="20" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Click="btnChatBigger_Click">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template" Value="{StaticResource ButtonTemplate}" />
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="btnChatSmaller" Content="-" Margin="261,124,0,0" Width="20" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Click="btnChatSmaller_Click">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template" Value="{StaticResource ButtonTemplate}" />
                </Style>
            </Button.Style>
        </Button>

        <TextBlock x:Name="lblAutoscrollHint" Text="Enable Autoscroll" Height="20" VerticalAlignment="Top" HorizontalAlignment="Right" Panel.ZIndex="2"
                   Margin="0,154,50,0" Width="95" Foreground="White" >

            <TextBlock.Triggers>
                <EventTrigger RoutedEvent="Window.Loaded">
                    <BeginStoryboard Storyboard="{StaticResource CloseHintStoryboard}" />
                </EventTrigger>
            </TextBlock.Triggers>

        </TextBlock>

        <CheckBox x:Name="cbAutoscroll" Content="" Margin="0,152,27,0" Width="20" Height="20" VerticalAlignment="Top" HorizontalAlignment="Right" Panel.ZIndex="2"
                  ToolTip="Enable autoscroll" IsChecked="True">
            <CheckBox.Style>
                <Style TargetType="{x:Type CheckBox}">
                    <Setter Property="Template" Value="{StaticResource CheckboxTemplate}" />
                </Style>
            </CheckBox.Style>
        </CheckBox>

        <local:FNFGraph x:Name="fnfgraph" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,25,5,0" Width="140"/>
        <ListView x:Name="pluginPanel" Height="28" Margin="323,120,162,0" VerticalAlignment="Top" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Auto" BorderThickness="0" Background="{x:Null}" Focusable="False"
                  ItemsSource="{Binding PluginInfos}">

            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>

            <ListView.ItemTemplate>
                <ItemContainerTemplate>
                    <Image Tag="{Binding name}" MouseLeftButtonDown="Image_MouseLeftButtonDown" Width="28" Height="28" Stretch="None" Cursor="Hand" Focusable="False">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Source" Value="{Binding imageSource}" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="{Binding imageSourceHover}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </ItemContainerTemplate>
            </ListView.ItemTemplate>

            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>

        </ListView>

        <TextBlock x:Name="lblFavoritesHint" Text="Favorites" Height="20" VerticalAlignment="Top" HorizontalAlignment="Right" Panel.ZIndex="2"
                   Margin="0,0,0,0" Width="55" Foreground="White" >

            <TextBlock.Triggers>
                <EventTrigger RoutedEvent="Window.Loaded">
                    <BeginStoryboard Storyboard="{StaticResource CloseHintStoryboard}" />
                </EventTrigger>
            </TextBlock.Triggers>

        </TextBlock>

        <Expander x:Name="expanderChannel" HorizontalAlignment="Right" ExpandDirection="Left" 
                  Margin="0,12,12,12" Panel.ZIndex="3">
            <Expander.Effect>
                <DropShadowEffect BlurRadius="36" Direction="138"/>
            </Expander.Effect>

            <Expander.Style>
                <Style TargetType="Expander">
                    <Setter Property="VerticalAlignment" Value="Top" />
                    <Style.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.Setters>
                                <Setter Property="VerticalAlignment" Value="Stretch" />
                            </Trigger.Setters>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Expander.Style>

            <Grid Background="#CC000000" Width="200">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="30" />
                    <RowDefinition Height="30" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Text="Favorites" Foreground="White" Background="{x:Null}" Margin="5" FontSize="15" FontFamily="Segoe UI Light"/>

                <Button Content="+" Grid.Row="1" Margin="5,5,0,5" Width="20" HorizontalAlignment="Left" VerticalAlignment="Stretch"
                        Command="{Binding CmdAddChannelEntry}" CommandParameter="{Binding ElementName=tbAddChannelField, Path=Text}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template" Value="{StaticResource ButtonTemplate}" />
                        </Style>
                    </Button.Style>
                </Button>

                <Button Content="-" Grid.Row="1" Margin="30,5,0,5" Width="20" HorizontalAlignment="Left" VerticalAlignment="Stretch"
                        Command="{Binding CmdRemoveChannelEntry}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template" Value="{StaticResource ButtonTemplate}" />
                        </Style>
                    </Button.Style>
                </Button>

                <TextBox x:Name="tbAddChannelField" Grid.Row="2" Margin="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{x:Null}" BorderBrush="White" 
                         CaretBrush="White" Foreground="White"/>

                <ListView x:Name="lvChannelFavorites" Grid.Row="3" Margin="5" ItemsSource="{Binding ChannelFavorites}" Background="{x:Null}"
                          BorderBrush="White" SelectedItem="{Binding SelectedChannel}" Foreground="White">
                </ListView>
            </Grid>
        </Expander>

    </Grid>
</Window>