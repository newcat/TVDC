<Window x:Class="pollPlugin.PollSetup"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:pollPlugin"
             mc:Ignorable="d" 
             Background="{DynamicResource WindowBackgroundBrush}"
             Title="Setup poll" Height="275" Width="265" ResizeMode="CanMinimize" Closing="Window_Closing">

    <Window.Resources>

        <LinearGradientBrush x:Key="WindowBackgroundBrush" SpreadMethod="Pad">
            <GradientStop Offset="0" Color="#3A3C48" />
            <GradientStop Offset="1" Color="#131218" />
        </LinearGradientBrush>

        <ControlTemplate x:Key="ButtonTemplate">
            <Grid x:Name="btnGrid">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal">
                            <Storyboard>
                                <ColorAnimation From="#40FFFFFF" To="Transparent" Duration="00:00:00.1000000"
                                                    Storyboard.TargetName="btnGrid" Storyboard.TargetProperty="(Panel.Background).Color"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimation From="Transparent" To="#40FFFFFF" Duration="00:00:00.1000000"
                                                    Storyboard.TargetName="btnGrid" Storyboard.TargetProperty="(Panel.Background).Color"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimation To="Gray" Duration="00:00:00.1000000"
                                                Storyboard.TargetName="btnlabel" Storyboard.TargetProperty="Foreground.Color" />
                                <ColorAnimation To="Gray" Duration="00:00:00.1000000"
                                                Storyboard.TargetName="btnborder" Storyboard.TargetProperty="BorderBrush.Color" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <ContentPresenter RecognizesAccessKey="True" />
                <Border BorderBrush="White" BorderThickness="1" CornerRadius="2" x:Name="btnborder"/>
                <Label x:Name="btnlabel" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="0" Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Foreground="White" Margin="0,-2.5,0,0"/>
                <Grid.Background>
                    <SolidColorBrush />
                </Grid.Background>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="CheckboxTemplate">
            <BulletDecorator Background="Transparent">
                <BulletDecorator.Bullet>
                    <StackPanel Orientation="Horizontal">
                        <Canvas>
                            <Ellipse Stroke="White" Width="16" Height="16" />
                            <Ellipse Width="8" Height="8" Margin="4,4" Fill="White" Name="checkBullet"/>
                        </Canvas>
                        <TextBlock Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="20,0,0,0"/>
                    </StackPanel>
                </BulletDecorator.Bullet>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checkBullet"
                                                         From="0.0" To="1.0" Duration="00:00:00.1" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checkBullet"
                                                         From="1.0" To="0.0" Duration="00:00:00.1" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <ContentPresenter RecognizesAccessKey="True" />
            </BulletDecorator>
        </ControlTemplate>

    </Window.Resources>

    <Grid x:Name="MainGrid">

        <CheckBox x:Name="cbMultiVote" Content="Multi-Vote" HorizontalAlignment="Left" Margin="10,207,0,0" VerticalAlignment="Top" Foreground="White" FontFamily="Segoe UI Light" Height="20"
                  ToolTip="If this option is enabled, viewers can vote for multiple options instead of just one, but they can still only vote one time per option.">
            <CheckBox.Style>
                <Style TargetType="{x:Type CheckBox}">
                    <Setter Property="Template" Value="{DynamicResource CheckboxTemplate}" />
                </Style>
            </CheckBox.Style>
        </CheckBox>
        <ListBox x:Name="listBox" HorizontalAlignment="Left" Height="166" Margin="10,36,0,0" VerticalAlignment="Top" Width="231" ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled">
            <ListBox.Style>
                <Style TargetType="{x:Type ListBox}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="White" />
                </Style>
            </ListBox.Style>
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Padding" Value="2" />
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding}" />
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Button x:Name="btnStartPoll" Content="Start Poll" HorizontalAlignment="Left" Margin="141,207,0,0" VerticalAlignment="Top"
                Width="100" Height="20" IsEnabled="False" Click="btnStartPoll_Click">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template" Value="{StaticResource ButtonTemplate}" />
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="btnDelete" Content="-" HorizontalAlignment="Left" Margin="220,10,0,0" VerticalAlignment="Top" Width="21" Height="21" Click="btnDelete_Click">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template" Value="{StaticResource ButtonTemplate}" />
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="btnAdd" Content="+" HorizontalAlignment="Left" Margin="194,10,0,0" VerticalAlignment="Top" Width="21" Height="21" Click="btnAdd_Click">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template" Value="{StaticResource ButtonTemplate}" />
                </Style>
            </Button.Style>
        </Button>
        <TextBox Background="Transparent"
			CaretBrush="White" BorderBrush="White"
			Foreground="White" x:Name="tbAddOption" HorizontalAlignment="Left"
            Height="21" Margin="10,10,0,0" TextWrapping="Wrap" Text=""
            VerticalAlignment="Top" Width="179" />

    </Grid>
</Window>
