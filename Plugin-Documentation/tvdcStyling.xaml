<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <LinearGradientBrush x:Key="WindowBackgroundBrush" SpreadMethod="Pad">
        <GradientStop Offset="0" Color="#3A3C48" />
        <GradientStop Offset="1" Color="#131218" />
    </LinearGradientBrush>


    <Style x:Key="{x:Type Button}" TargetType="Button">
        <Setter Property="Template" Value="{DynamicResource ButtonTemplate}" />
    </Style>
    <ControlTemplate x:Key="ButtonTemplate">
        <Grid x:Name="btnGrid">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ColorAnimation From="#40FFFFFF" To="Transparent" Duration="00:00:00.1000000"
                                                    Storyboard.TargetName="btnGrid" Storyboard.TargetProperty="(Panel.Background).Color"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation From="Transparent" To="#40FFFFFF" Duration="00:00:00.1000000"
                                                    Storyboard.TargetName="btnGrid" Storyboard.TargetProperty="(Panel.Background).Color"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimation To="Gray" Duration="00:00:00.1000000"
                                                Storyboard.TargetName="btnlabel" Storyboard.TargetProperty="Foreground.Color" />
                            <ColorAnimation To="Gray" Duration="00:00:00.1000000"
                                                Storyboard.TargetName="btnborder" Storyboard.TargetProperty="BorderBrush.Color" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter RecognizesAccessKey="True" />
            <Border BorderBrush="White" BorderThickness="1" CornerRadius="2" x:Name="btnborder"/>
            <Label x:Name="btnlabel" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="0" Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Foreground="White" Margin="0,-2,0,0"/>
            <Grid.Background>
                <SolidColorBrush />
            </Grid.Background>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="CheckboxTemplate">
        <BulletDecorator Background="Transparent">
            <BulletDecorator.Bullet>
                <StackPanel Orientation="Horizontal">
                    <Canvas>
                        <Ellipse Stroke="White" Width="16" Height="16" />
                        <Ellipse Width="8" Height="8" Margin="4,4" Fill="White" Name="checkBullet"/>
                    </Canvas>
                    <TextBlock Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Margin="20,0,0,0"/>
                </StackPanel>
            </BulletDecorator.Bullet>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checkBullet"
                                                         From="0.0" To="1.0" Duration="00:00:00.1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checkBullet"
                                                         From="1.0" To="0.0" Duration="00:00:00.1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter RecognizesAccessKey="True" />
        </BulletDecorator>
    </ControlTemplate>

    <!-- Progress Bar Style -->
    <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Rectangle x:Name="PART_Track"/>
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                            <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                            <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Scroll Bar Style -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{DynamicResource sbVert}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{DynamicResource sbHori}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="sbVert" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>

            <Border Grid.RowSpan="3" CornerRadius="4" BorderBrush="White" BorderThickness="0" />

            <RepeatButton Grid.Row="0"
        			Style="{DynamicResource ScrollBarLineButton}"
        			Height="18"
        			Command="ScrollBar.LineUpCommand"
        			Content="M 0 4 L 8 4 L 4 0 Z" />

            <RepeatButton Grid.Row="3"
        			Style="{DynamicResource ScrollBarLineButton}"
        			Height="18"
        			Command="ScrollBar.LineDownCommand"
        			Content="M 0 0 L 4 4 L 8 0 Z" />

            <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                <Track.Thumb>
                    <Thumb Margin="1,0,1,0">
                        <Thumb.Style>
                            <Style TargetType="{x:Type Thumb}">
                                <Setter Property="Focusable" Value="False" />
                                <Setter Property="Template" Value="{DynamicResource scrollBarThumb}" />
                            </Style>
                        </Thumb.Style>
                    </Thumb>
                </Track.Thumb>
            </Track>

        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="sbHori" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>

            <Border Grid.ColumnSpan="4" Background="Transparent"  BorderThickness="0" />

            <RepeatButton Grid.Column="0"
        			Style="{DynamicResource ScrollBarLineButton}"
        			Width="18"
        			Command="ScrollBar.LineLeftCommand"
        			Content="M 4 0 L 4 8 L 0 4 Z" />

            <RepeatButton Grid.Column="3"
        			Style="{DynamicResource ScrollBarLineButton}"
        			Width="18"
        			Command="ScrollBar.LineRightCommand"
        			Content="M 0 0 L 4 4 L 0 8 Z" />

            <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                <Track.Thumb>
                    <Thumb Margin="0,1,0,1">
                        <Thumb.Style>
                            <Style TargetType="{x:Type Thumb}">
                                <Setter Property="Focusable" Value="False" />
                                <Setter Property="Template" Value="{DynamicResource scrollBarThumb}" />
                            </Style>
                        </Thumb.Style>
                    </Thumb>
                </Track.Thumb>
            </Track>

        </Grid>
    </ControlTemplate>

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="repbtnBorder" Margin="1" CornerRadius="2" BorderThickness="1" BorderBrush="White" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation To="Transparent" Duration="00:00:00.1"
        										Storyboard.TargetName="repbtnBorder" Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation To="#40FFFFFF" Duration="00:00:00.1"
        										Storyboard.TargetName="repbtnBorder" Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation To="#40000000" Duration="00:00:00.0"
        										Storyboard.TargetName="repbtnBorder" Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="repbtnPath" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="White"
        						Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="scrollBarThumb" TargetType="{x:Type Thumb}">
        <Border BorderBrush="White" BorderThickness="1" CornerRadius="2" x:Name="thumbBorder" Background="#00000000">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ColorAnimation To="Transparent" Duration="00:00:00.1"
        							Storyboard.TargetName="thumbBorder" Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation To="#40FFFFFF" Duration="00:00:00.1"
        							Storyboard.TargetName="thumbBorder" Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation To="#40000000" Duration="00:00:00.0"
        							Storyboard.TargetName="thumbBorder" Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>

    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}"
       TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <DockPanel Margin="{TemplateBinding Padding}">

                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
        							KeyboardNavigation.DirectionalNavigation="Local"
        							CanContentScroll="True"
        							CanHorizontallyScroll="False"
        							CanVerticallyScroll="False" />

                        </DockPanel>

                        <ScrollBar x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" 
        						Grid.Row="1" Maximum="{TemplateBinding ScrollableWidth}"
        						ViewportSize="{TemplateBinding ViewportWidth}"
        						Value="{TemplateBinding HorizontalOffset}"
        						Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />

                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="1"
        						Maximum="{TemplateBinding ScrollableHeight}"
        						ViewportSize="{TemplateBinding ViewportHeight}"
        						Value="{TemplateBinding VerticalOffset}"
        						Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
